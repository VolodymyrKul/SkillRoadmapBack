// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SkillRoadMapBack.DAL;

namespace SkillRoadMapBack.DAL.Migrations
{
    [DbContext(typeof(SkillRoadMapDbContext))]
    [Migration("20210217164749_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Category")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("XPKCategory");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Includes programming on different languages as C#, Java, Python, Kotlin, C++",
                            Title = "Programming"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Includes different types of software testing",
                            Title = "Testing"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Includes db design, processes design, software architecture",
                            Title = "Designing"
                        });
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Comment")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CommentText")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("IdEmployer")
                        .HasColumnType("int");

                    b.Property<int?>("IdUserSkill")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("XPKComment");

                    b.HasIndex("IdEmployer");

                    b.HasIndex("IdUserSkill");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CommentText = "Need to learn C#",
                            IdEmployer = 1,
                            IdUserSkill = 8
                        },
                        new
                        {
                            Id = 2,
                            CommentText = "Need to learn C#",
                            IdEmployer = 1,
                            IdUserSkill = 9
                        },
                        new
                        {
                            Id = 3,
                            CommentText = "Need to learn C#",
                            IdEmployer = 1,
                            IdUserSkill = 10
                        },
                        new
                        {
                            Id = 4,
                            CommentText = "Need to learn C#",
                            IdEmployer = 1,
                            IdUserSkill = 11
                        },
                        new
                        {
                            Id = 5,
                            CommentText = "Need to learn C#",
                            IdEmployer = 1,
                            IdUserSkill = 12
                        });
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Employee")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DevLevel")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("Experience")
                        .HasColumnType("float");

                    b.Property<string>("Firstname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("IdMentor")
                        .HasColumnType("int");

                    b.Property<string>("Lastname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("XPKEmployee");

                    b.HasIndex("IdMentor");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DevLevel = "Trainee C#",
                            Email = "ilivocs@gmail.com",
                            Experience = 5.0,
                            Firstname = "Oksana",
                            IdMentor = 3,
                            Lastname = "Iliv",
                            Password = "_Aa123456",
                            Role = "User"
                        },
                        new
                        {
                            Id = 2,
                            DevLevel = "Junior C#",
                            Email = "turyanmykh@gmail.com",
                            Experience = 5.0,
                            Firstname = "Mykhailo",
                            IdMentor = 3,
                            Lastname = "Turianskyi",
                            Password = "_Aa123456",
                            Role = "User"
                        },
                        new
                        {
                            Id = 3,
                            DevLevel = "Middle C#",
                            Email = "stasenoleks@gmail.com",
                            Experience = 5.0,
                            Firstname = "Oleksandr",
                            IdMentor = 3,
                            Lastname = "Stasenko",
                            Password = "_Aa123456",
                            Role = "User"
                        },
                        new
                        {
                            Id = 4,
                            DevLevel = "Senior C#",
                            Email = "pynzynyura@gmail.com",
                            Experience = 5.0,
                            Firstname = "Yurii",
                            IdMentor = 4,
                            Lastname = "Pynzyn",
                            Password = "_Aa123456",
                            Role = "User"
                        },
                        new
                        {
                            Id = 5,
                            DevLevel = "Middle C#",
                            Email = "hladyoandr@gmail.com",
                            Experience = 5.0,
                            Firstname = "Andrii",
                            IdMentor = 4,
                            Lastname = "Hlado",
                            Password = "_Aa123456",
                            Role = "User"
                        });
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.Employer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Employer")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Firstname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Lastname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("XPKEmployer");

                    b.ToTable("Employers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "melnykmyk@gmail.com",
                            Firstname = "Mykola",
                            Lastname = "Melnyk",
                            Password = "_Aa123456",
                            Role = "HR"
                        },
                        new
                        {
                            Id = 2,
                            Email = "shevchenkovol@gmail.com",
                            Firstname = "Volodymyr",
                            Lastname = "Shevchenko",
                            Password = "_Aa123456",
                            Role = "HR"
                        },
                        new
                        {
                            Id = 3,
                            Email = "boikoolek@gmail.com",
                            Firstname = "Oleksandr",
                            Lastname = "Boiko",
                            Password = "_Aa123456",
                            Role = "Mentor"
                        },
                        new
                        {
                            Id = 4,
                            Email = "kovalenkoiv@gmail.com",
                            Firstname = "Ivan",
                            Lastname = "Kovalenko",
                            Password = "_Aa123456",
                            Role = "Mentor"
                        },
                        new
                        {
                            Id = 5,
                            Email = "bondarenkovas@gmail.com",
                            Firstname = "Vasyl",
                            Lastname = "Bondarenko",
                            Password = "_Aa123456",
                            Role = "Mentor"
                        });
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Notification")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdEmployee")
                        .HasColumnType("int");

                    b.Property<int?>("IdEmployer")
                        .HasColumnType("int");

                    b.Property<int?>("IdUserSkill")
                        .HasColumnType("int");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("NotificationText")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("SendingDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("XPKNotification");

                    b.HasIndex("IdEmployee");

                    b.HasIndex("IdEmployer");

                    b.HasIndex("IdUserSkill");

                    b.ToTable("Notifications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdEmployee = 1,
                            IdEmployer = 1,
                            IdUserSkill = 8,
                            IsRead = false,
                            NotificationText = "Need to learn C#",
                            SendingDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            IdEmployee = 1,
                            IdEmployer = 1,
                            IdUserSkill = 9,
                            IsRead = false,
                            NotificationText = "Need to learn C#",
                            SendingDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            IdEmployee = 1,
                            IdEmployer = 1,
                            IdUserSkill = 10,
                            IsRead = false,
                            NotificationText = "Need to learn C#",
                            SendingDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            IdEmployee = 1,
                            IdEmployer = 1,
                            IdUserSkill = 11,
                            IsRead = false,
                            NotificationText = "Need to learn C#",
                            SendingDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            IdEmployee = 1,
                            IdEmployer = 1,
                            IdUserSkill = 12,
                            IsRead = false,
                            NotificationText = "Need to learn C#",
                            SendingDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.SkillDistribution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_SkillDistribution")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdChildSkill")
                        .HasColumnType("int");

                    b.Property<int?>("IdParentSkill")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("XPKSkillDistribution");

                    b.HasIndex("IdChildSkill");

                    b.HasIndex("IdParentSkill");

                    b.ToTable("SkillDistributions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdChildSkill = 8,
                            IdParentSkill = 1
                        },
                        new
                        {
                            Id = 2,
                            IdChildSkill = 9,
                            IdParentSkill = 1
                        },
                        new
                        {
                            Id = 3,
                            IdChildSkill = 10,
                            IdParentSkill = 1
                        },
                        new
                        {
                            Id = 4,
                            IdChildSkill = 11,
                            IdParentSkill = 2
                        },
                        new
                        {
                            Id = 5,
                            IdChildSkill = 12,
                            IdParentSkill = 2
                        },
                        new
                        {
                            Id = 6,
                            IdChildSkill = 13,
                            IdParentSkill = 2
                        },
                        new
                        {
                            Id = 7,
                            IdChildSkill = 14,
                            IdParentSkill = 3
                        },
                        new
                        {
                            Id = 8,
                            IdChildSkill = 15,
                            IdParentSkill = 3
                        },
                        new
                        {
                            Id = 9,
                            IdChildSkill = 16,
                            IdParentSkill = 3
                        },
                        new
                        {
                            Id = 10,
                            IdChildSkill = 17,
                            IdParentSkill = 4
                        },
                        new
                        {
                            Id = 11,
                            IdChildSkill = 18,
                            IdParentSkill = 4
                        },
                        new
                        {
                            Id = 12,
                            IdChildSkill = 19,
                            IdParentSkill = 4
                        },
                        new
                        {
                            Id = 13,
                            IdChildSkill = 20,
                            IdParentSkill = 5
                        },
                        new
                        {
                            Id = 14,
                            IdChildSkill = 21,
                            IdParentSkill = 5
                        },
                        new
                        {
                            Id = 15,
                            IdChildSkill = 27,
                            IdParentSkill = 22
                        },
                        new
                        {
                            Id = 16,
                            IdChildSkill = 28,
                            IdParentSkill = 22
                        },
                        new
                        {
                            Id = 17,
                            IdChildSkill = 29,
                            IdParentSkill = 22
                        },
                        new
                        {
                            Id = 18,
                            IdChildSkill = 30,
                            IdParentSkill = 23
                        },
                        new
                        {
                            Id = 19,
                            IdChildSkill = 31,
                            IdParentSkill = 23
                        },
                        new
                        {
                            Id = 20,
                            IdChildSkill = 32,
                            IdParentSkill = 23
                        },
                        new
                        {
                            Id = 21,
                            IdChildSkill = 33,
                            IdParentSkill = 24
                        },
                        new
                        {
                            Id = 22,
                            IdChildSkill = 34,
                            IdParentSkill = 24
                        },
                        new
                        {
                            Id = 23,
                            IdChildSkill = 35,
                            IdParentSkill = 24
                        },
                        new
                        {
                            Id = 24,
                            IdChildSkill = 36,
                            IdParentSkill = 25
                        },
                        new
                        {
                            Id = 25,
                            IdChildSkill = 37,
                            IdParentSkill = 25
                        },
                        new
                        {
                            Id = 26,
                            IdChildSkill = 38,
                            IdParentSkill = 25
                        },
                        new
                        {
                            Id = 27,
                            IdChildSkill = 39,
                            IdParentSkill = 26
                        },
                        new
                        {
                            Id = 28,
                            IdChildSkill = 40,
                            IdParentSkill = 26
                        },
                        new
                        {
                            Id = 29,
                            IdChildSkill = 41,
                            IdParentSkill = 26
                        },
                        new
                        {
                            Id = 30,
                            IdChildSkill = 45,
                            IdParentSkill = 42
                        },
                        new
                        {
                            Id = 31,
                            IdChildSkill = 46,
                            IdParentSkill = 42
                        },
                        new
                        {
                            Id = 32,
                            IdChildSkill = 47,
                            IdParentSkill = 42
                        },
                        new
                        {
                            Id = 33,
                            IdChildSkill = 48,
                            IdParentSkill = 43
                        },
                        new
                        {
                            Id = 34,
                            IdChildSkill = 49,
                            IdParentSkill = 43
                        },
                        new
                        {
                            Id = 35,
                            IdChildSkill = 50,
                            IdParentSkill = 43
                        },
                        new
                        {
                            Id = 36,
                            IdChildSkill = 51,
                            IdParentSkill = 44
                        },
                        new
                        {
                            Id = 37,
                            IdChildSkill = 52,
                            IdParentSkill = 44
                        },
                        new
                        {
                            Id = 38,
                            IdChildSkill = 53,
                            IdParentSkill = 44
                        });
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.UserSkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_UserSkill")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdCategory")
                        .HasColumnType("int");

                    b.Property<int?>("IdEmployee")
                        .HasColumnType("int");

                    b.Property<int>("SkillLevel")
                        .HasColumnType("int");

                    b.Property<string>("Skillname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("XPKUserSkill");

                    b.HasIndex("IdCategory");

                    b.HasIndex("IdEmployee");

                    b.ToTable("UserSkills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDate = new DateTime(2021, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 1,
                            IdEmployee = 1,
                            SkillLevel = 3,
                            Skillname = "С# Basics",
                            StartDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            EndDate = new DateTime(2021, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 1,
                            IdEmployee = 1,
                            SkillLevel = 4,
                            Skillname = "C# Classes OOP",
                            StartDate = new DateTime(2021, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            EndDate = new DateTime(2021, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 1,
                            IdEmployee = 1,
                            SkillLevel = 5,
                            Skillname = "C# Exception",
                            StartDate = new DateTime(2021, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            EndDate = new DateTime(2021, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 1,
                            IdEmployee = 1,
                            SkillLevel = 4,
                            Skillname = "C# Delegate",
                            StartDate = new DateTime(2021, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            EndDate = new DateTime(2021, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 1,
                            IdEmployee = 1,
                            SkillLevel = 3,
                            Skillname = "C# Interface",
                            StartDate = new DateTime(2021, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            EndDate = new DateTime(2021, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 1,
                            IdEmployee = 1,
                            SkillLevel = 2,
                            Skillname = "C# Collections",
                            StartDate = new DateTime(2021, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            EndDate = new DateTime(2021, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 1,
                            IdEmployee = 1,
                            SkillLevel = 2,
                            Skillname = "C# String",
                            StartDate = new DateTime(2021, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            EndDate = new DateTime(2021, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 1,
                            IdEmployee = 1,
                            SkillLevel = 2,
                            Skillname = "C# Variables",
                            StartDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            EndDate = new DateTime(2021, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 1,
                            IdEmployee = 1,
                            SkillLevel = 3,
                            Skillname = "C# Data types",
                            StartDate = new DateTime(2021, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            EndDate = new DateTime(2021, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 1,
                            IdEmployee = 1,
                            SkillLevel = 4,
                            Skillname = "C# Cycles",
                            StartDate = new DateTime(2021, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            EndDate = new DateTime(2021, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 1,
                            IdEmployee = 1,
                            SkillLevel = 3,
                            Skillname = "C# Classes and objects",
                            StartDate = new DateTime(2021, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            EndDate = new DateTime(2021, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 1,
                            IdEmployee = 1,
                            SkillLevel = 4,
                            Skillname = "C# Structures",
                            StartDate = new DateTime(2021, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            EndDate = new DateTime(2021, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 1,
                            IdEmployee = 1,
                            SkillLevel = 5,
                            Skillname = "C# Access modifiers",
                            StartDate = new DateTime(2021, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            EndDate = new DateTime(2021, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 1,
                            IdEmployee = 1,
                            SkillLevel = 5,
                            Skillname = "C# Try..catch..finally",
                            StartDate = new DateTime(2021, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            EndDate = new DateTime(2021, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 1,
                            IdEmployee = 1,
                            SkillLevel = 4,
                            Skillname = "C# Exception types. Exception class",
                            StartDate = new DateTime(2021, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16,
                            EndDate = new DateTime(2021, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 1,
                            IdEmployee = 1,
                            SkillLevel = 5,
                            Skillname = "C# Creating Exception Classes",
                            StartDate = new DateTime(2021, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 17,
                            EndDate = new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 1,
                            IdEmployee = 1,
                            SkillLevel = 3,
                            Skillname = "C# Delegates",
                            StartDate = new DateTime(2021, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 18,
                            EndDate = new DateTime(2021, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 1,
                            IdEmployee = 1,
                            SkillLevel = 4,
                            Skillname = "C# Lambdas",
                            StartDate = new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 19,
                            EndDate = new DateTime(2021, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 1,
                            IdEmployee = 1,
                            SkillLevel = 5,
                            Skillname = "C# Anonymous methods",
                            StartDate = new DateTime(2021, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 20,
                            EndDate = new DateTime(2021, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 1,
                            IdEmployee = 1,
                            SkillLevel = 2,
                            Skillname = "C# Defining interfaces",
                            StartDate = new DateTime(2021, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 21,
                            EndDate = new DateTime(2021, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 1,
                            IdEmployee = 1,
                            SkillLevel = 4,
                            Skillname = "C# Template interfaces",
                            StartDate = new DateTime(2021, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 22,
                            EndDate = new DateTime(2021, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 2,
                            IdEmployee = 1,
                            SkillLevel = 3,
                            Skillname = "By object of testing",
                            StartDate = new DateTime(2021, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 23,
                            EndDate = new DateTime(2021, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 2,
                            IdEmployee = 1,
                            SkillLevel = 4,
                            Skillname = "By testing purposes",
                            StartDate = new DateTime(2021, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 24,
                            EndDate = new DateTime(2021, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 2,
                            IdEmployee = 1,
                            SkillLevel = 5,
                            Skillname = "According to the knowledge of the system",
                            StartDate = new DateTime(2021, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 25,
                            EndDate = new DateTime(2021, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 2,
                            IdEmployee = 1,
                            SkillLevel = 3,
                            Skillname = "By the degree of automation",
                            StartDate = new DateTime(2021, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 26,
                            EndDate = new DateTime(2021, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 2,
                            IdEmployee = 1,
                            SkillLevel = 4,
                            Skillname = "By the degree of isolation of the components",
                            StartDate = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 27,
                            EndDate = new DateTime(2021, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 2,
                            IdEmployee = 1,
                            SkillLevel = 2,
                            Skillname = "Security testing",
                            StartDate = new DateTime(2021, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 28,
                            EndDate = new DateTime(2021, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 2,
                            IdEmployee = 1,
                            SkillLevel = 3,
                            Skillname = "Performance testing",
                            StartDate = new DateTime(2021, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 29,
                            EndDate = new DateTime(2021, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 2,
                            IdEmployee = 1,
                            SkillLevel = 4,
                            Skillname = "Smoke testing",
                            StartDate = new DateTime(2021, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 30,
                            EndDate = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 2,
                            IdEmployee = 1,
                            SkillLevel = 3,
                            Skillname = "Functional testing",
                            StartDate = new DateTime(2021, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 31,
                            EndDate = new DateTime(2021, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 2,
                            IdEmployee = 1,
                            SkillLevel = 4,
                            Skillname = "Non-functional testing",
                            StartDate = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 32,
                            EndDate = new DateTime(2021, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 2,
                            IdEmployee = 1,
                            SkillLevel = 5,
                            Skillname = "Сhange testing",
                            StartDate = new DateTime(2021, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 33,
                            EndDate = new DateTime(2021, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 2,
                            IdEmployee = 1,
                            SkillLevel = 5,
                            Skillname = "Black box",
                            StartDate = new DateTime(2021, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 34,
                            EndDate = new DateTime(2021, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 2,
                            IdEmployee = 1,
                            SkillLevel = 5,
                            Skillname = "White box",
                            StartDate = new DateTime(2021, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 35,
                            EndDate = new DateTime(2021, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 2,
                            IdEmployee = 1,
                            SkillLevel = 5,
                            Skillname = "Gray box",
                            StartDate = new DateTime(2021, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 36,
                            EndDate = new DateTime(2021, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 2,
                            IdEmployee = 1,
                            SkillLevel = 2,
                            Skillname = "Manual testing",
                            StartDate = new DateTime(2021, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 37,
                            EndDate = new DateTime(2021, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 2,
                            IdEmployee = 1,
                            SkillLevel = 3,
                            Skillname = "Automated testing",
                            StartDate = new DateTime(2021, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 38,
                            EndDate = new DateTime(2021, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 2,
                            IdEmployee = 1,
                            SkillLevel = 4,
                            Skillname = "Semiautomated testing",
                            StartDate = new DateTime(2021, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 39,
                            EndDate = new DateTime(2021, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 2,
                            IdEmployee = 1,
                            SkillLevel = 3,
                            Skillname = "Component testing",
                            StartDate = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 40,
                            EndDate = new DateTime(2021, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 2,
                            IdEmployee = 1,
                            SkillLevel = 4,
                            Skillname = "Integration testing",
                            StartDate = new DateTime(2021, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 41,
                            EndDate = new DateTime(2021, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 2,
                            IdEmployee = 1,
                            SkillLevel = 5,
                            Skillname = "System testing",
                            StartDate = new DateTime(2021, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 42,
                            EndDate = new DateTime(2021, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 3,
                            IdEmployee = 1,
                            SkillLevel = 2,
                            Skillname = "IDEF designing",
                            StartDate = new DateTime(2021, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 43,
                            EndDate = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 3,
                            IdEmployee = 1,
                            SkillLevel = 4,
                            Skillname = "UML designing",
                            StartDate = new DateTime(2021, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 44,
                            EndDate = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 3,
                            IdEmployee = 1,
                            SkillLevel = 4,
                            Skillname = "Design patterns",
                            StartDate = new DateTime(2021, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 45,
                            EndDate = new DateTime(2021, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 3,
                            IdEmployee = 1,
                            SkillLevel = 1,
                            Skillname = "IDEF0 design",
                            StartDate = new DateTime(2021, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 46,
                            EndDate = new DateTime(2021, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 3,
                            IdEmployee = 1,
                            SkillLevel = 2,
                            Skillname = "DFD design",
                            StartDate = new DateTime(2021, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 47,
                            EndDate = new DateTime(2021, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 3,
                            IdEmployee = 1,
                            SkillLevel = 3,
                            Skillname = "IDEF3 design",
                            StartDate = new DateTime(2021, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 48,
                            EndDate = new DateTime(2021, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 3,
                            IdEmployee = 1,
                            SkillLevel = 3,
                            Skillname = "Class diagram",
                            StartDate = new DateTime(2021, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 49,
                            EndDate = new DateTime(2021, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 3,
                            IdEmployee = 1,
                            SkillLevel = 4,
                            Skillname = "Use case diagram",
                            StartDate = new DateTime(2021, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 50,
                            EndDate = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 3,
                            IdEmployee = 1,
                            SkillLevel = 5,
                            Skillname = "Component diagram",
                            StartDate = new DateTime(2021, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 51,
                            EndDate = new DateTime(2021, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 3,
                            IdEmployee = 1,
                            SkillLevel = 5,
                            Skillname = "Factory pattern",
                            StartDate = new DateTime(2021, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 52,
                            EndDate = new DateTime(2021, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 3,
                            IdEmployee = 1,
                            SkillLevel = 3,
                            Skillname = "Moment pattern",
                            StartDate = new DateTime(2021, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 53,
                            EndDate = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 3,
                            IdEmployee = 1,
                            SkillLevel = 4,
                            Skillname = "Bridge pattern",
                            StartDate = new DateTime(2021, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.Comment", b =>
                {
                    b.HasOne("SkillRoadmapBack.Core.Models.Employer", "IdEmployerNavigation")
                        .WithMany("Comments")
                        .HasForeignKey("IdEmployer")
                        .HasConstraintName("R_2");

                    b.HasOne("SkillRoadmapBack.Core.Models.UserSkill", "IdUserSkillNavigation")
                        .WithMany("Comments")
                        .HasForeignKey("IdUserSkill")
                        .HasConstraintName("R_3");

                    b.Navigation("IdEmployerNavigation");

                    b.Navigation("IdUserSkillNavigation");
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.Employee", b =>
                {
                    b.HasOne("SkillRoadmapBack.Core.Models.Employer", "IdEmployerNavigation")
                        .WithMany("Employees")
                        .HasForeignKey("IdMentor")
                        .HasConstraintName("R_9");

                    b.Navigation("IdEmployerNavigation");
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.Notification", b =>
                {
                    b.HasOne("SkillRoadmapBack.Core.Models.Employee", "IdEmployeeNavigation")
                        .WithMany("Notifications")
                        .HasForeignKey("IdEmployee")
                        .HasConstraintName("R_6");

                    b.HasOne("SkillRoadmapBack.Core.Models.Employer", "IdEmployerNavigation")
                        .WithMany("Notifications")
                        .HasForeignKey("IdEmployer")
                        .HasConstraintName("R_4");

                    b.HasOne("SkillRoadmapBack.Core.Models.UserSkill", "IdUserSkillNavigation")
                        .WithMany("Notifications")
                        .HasForeignKey("IdUserSkill")
                        .HasConstraintName("R_5");

                    b.Navigation("IdEmployeeNavigation");

                    b.Navigation("IdEmployerNavigation");

                    b.Navigation("IdUserSkillNavigation");
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.SkillDistribution", b =>
                {
                    b.HasOne("SkillRoadmapBack.Core.Models.UserSkill", "IdChildSkillNavigation")
                        .WithMany("ChildSkillDistributions")
                        .HasForeignKey("IdChildSkill")
                        .HasConstraintName("R_8");

                    b.HasOne("SkillRoadmapBack.Core.Models.UserSkill", "IdParentSkillNavigation")
                        .WithMany("ParentSkillDistributions")
                        .HasForeignKey("IdParentSkill")
                        .HasConstraintName("R_7");

                    b.Navigation("IdChildSkillNavigation");

                    b.Navigation("IdParentSkillNavigation");
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.UserSkill", b =>
                {
                    b.HasOne("SkillRoadmapBack.Core.Models.Category", "IdCategoryNavigation")
                        .WithMany("UserSkills")
                        .HasForeignKey("IdCategory")
                        .HasConstraintName("R_10");

                    b.HasOne("SkillRoadmapBack.Core.Models.Employee", "IdEmployeeNavigation")
                        .WithMany("UserSkills")
                        .HasForeignKey("IdEmployee")
                        .HasConstraintName("R_1");

                    b.Navigation("IdCategoryNavigation");

                    b.Navigation("IdEmployeeNavigation");
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.Category", b =>
                {
                    b.Navigation("UserSkills");
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.Employee", b =>
                {
                    b.Navigation("Notifications");

                    b.Navigation("UserSkills");
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.Employer", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Employees");

                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.UserSkill", b =>
                {
                    b.Navigation("ChildSkillDistributions");

                    b.Navigation("Comments");

                    b.Navigation("Notifications");

                    b.Navigation("ParentSkillDistributions");
                });
#pragma warning restore 612, 618
        }
    }
}
