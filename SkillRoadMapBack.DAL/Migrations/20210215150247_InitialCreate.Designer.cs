// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SkillRoadMapBack.DAL;

namespace SkillRoadMapBack.DAL.Migrations
{
    [DbContext(typeof(SkillRoadMapDbContext))]
    [Migration("20210215150247_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Comment")
                        .UseIdentityColumn();

                    b.Property<string>("CommentText")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("IdEmployer")
                        .HasColumnType("int");

                    b.Property<int?>("IdUserSkill")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("XPKComment");

                    b.HasIndex("IdEmployer");

                    b.HasIndex("IdUserSkill");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CommentText = "Tmp",
                            IdEmployer = 1,
                            IdUserSkill = 8
                        },
                        new
                        {
                            Id = 2,
                            CommentText = "Tmp",
                            IdEmployer = 1,
                            IdUserSkill = 9
                        },
                        new
                        {
                            Id = 3,
                            CommentText = "Tmp",
                            IdEmployer = 1,
                            IdUserSkill = 10
                        },
                        new
                        {
                            Id = 4,
                            CommentText = "Tmp",
                            IdEmployer = 1,
                            IdUserSkill = 11
                        },
                        new
                        {
                            Id = 5,
                            CommentText = "Tmp",
                            IdEmployer = 1,
                            IdUserSkill = 12
                        });
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Employee")
                        .UseIdentityColumn();

                    b.Property<string>("DevLevel")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("Experience")
                        .HasColumnType("float");

                    b.Property<string>("Firstname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Lastname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("XPKEmployee");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DevLevel = "Trainee C#",
                            Email = "ilivocs@gmail.com",
                            Experience = 5.0,
                            Firstname = "Oksana",
                            Lastname = "Iliv",
                            Password = "_Aa123456",
                            Role = "User"
                        },
                        new
                        {
                            Id = 2,
                            DevLevel = "Junior C#",
                            Email = "turyanmykh@gmail.com",
                            Experience = 5.0,
                            Firstname = "Mykhailo",
                            Lastname = "Turianskyi",
                            Password = "_Aa123456",
                            Role = "User"
                        },
                        new
                        {
                            Id = 3,
                            DevLevel = "Middle C#",
                            Email = "stasenoleks@gmail.com",
                            Experience = 5.0,
                            Firstname = "Oleksandr",
                            Lastname = "Stasenko",
                            Password = "_Aa123456",
                            Role = "User"
                        },
                        new
                        {
                            Id = 4,
                            DevLevel = "Senior C#",
                            Email = "pynzynyura@gmail.com",
                            Experience = 5.0,
                            Firstname = "Yurii",
                            Lastname = "Pynzyn",
                            Password = "_Aa123456",
                            Role = "User"
                        },
                        new
                        {
                            Id = 5,
                            DevLevel = "Middle C#",
                            Email = "hladyoandr@gmail.com",
                            Experience = 5.0,
                            Firstname = "Andrii",
                            Lastname = "Hlado",
                            Password = "_Aa123456",
                            Role = "User"
                        });
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.Employer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Employer")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Firstname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Lastname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("XPKEmployer");

                    b.ToTable("Employers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "melnykmyk@gmail.com",
                            Firstname = "Mykola",
                            Lastname = "Melnyk",
                            Password = "_Aa123456",
                            Role = "Employer"
                        },
                        new
                        {
                            Id = 2,
                            Email = "shevchenkovol@gmail.com",
                            Firstname = "Volodymyr",
                            Lastname = "Shevchenko",
                            Password = "_Aa123456",
                            Role = "Employer"
                        },
                        new
                        {
                            Id = 3,
                            Email = "boikoolek@gmail.com",
                            Firstname = "Oleksandr",
                            Lastname = "Boiko",
                            Password = "_Aa123456",
                            Role = "Employer"
                        },
                        new
                        {
                            Id = 4,
                            Email = "kovalenkoiv@gmail.com",
                            Firstname = "Ivan",
                            Lastname = "Kovalenko",
                            Password = "_Aa123456",
                            Role = "Employer"
                        },
                        new
                        {
                            Id = 5,
                            Email = "bondarenkovas@gmail.com",
                            Firstname = "Vasyl",
                            Lastname = "Bondarenko",
                            Password = "_Aa123456",
                            Role = "Employer"
                        });
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Notification")
                        .UseIdentityColumn();

                    b.Property<int?>("IdEmployee")
                        .HasColumnType("int");

                    b.Property<int?>("IdEmployer")
                        .HasColumnType("int");

                    b.Property<int?>("IdUserSkill")
                        .HasColumnType("int");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("NotificationText")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("SendingDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("XPKNotification");

                    b.HasIndex("IdEmployee");

                    b.HasIndex("IdEmployer");

                    b.HasIndex("IdUserSkill");

                    b.ToTable("Notifications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdEmployee = 1,
                            IdEmployer = 1,
                            IdUserSkill = 8,
                            IsRead = false,
                            NotificationText = "Tmp",
                            SendingDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            IdEmployee = 1,
                            IdEmployer = 1,
                            IdUserSkill = 9,
                            IsRead = false,
                            NotificationText = "Tmp",
                            SendingDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            IdEmployee = 1,
                            IdEmployer = 1,
                            IdUserSkill = 10,
                            IsRead = false,
                            NotificationText = "Tmp",
                            SendingDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            IdEmployee = 1,
                            IdEmployer = 1,
                            IdUserSkill = 11,
                            IsRead = false,
                            NotificationText = "Tmp",
                            SendingDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            IdEmployee = 1,
                            IdEmployer = 1,
                            IdUserSkill = 12,
                            IsRead = false,
                            NotificationText = "Tmp",
                            SendingDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.SkillDistribution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_SkillDistribution")
                        .UseIdentityColumn();

                    b.Property<int?>("IdChildSkill")
                        .HasColumnType("int");

                    b.Property<int?>("IdParentSkill")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("XPKSkillDistribution");

                    b.HasIndex("IdChildSkill");

                    b.HasIndex("IdParentSkill");

                    b.ToTable("SkillDistributions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdChildSkill = 8,
                            IdParentSkill = 1
                        },
                        new
                        {
                            Id = 2,
                            IdChildSkill = 9,
                            IdParentSkill = 1
                        },
                        new
                        {
                            Id = 3,
                            IdChildSkill = 10,
                            IdParentSkill = 1
                        },
                        new
                        {
                            Id = 4,
                            IdChildSkill = 11,
                            IdParentSkill = 2
                        },
                        new
                        {
                            Id = 5,
                            IdChildSkill = 12,
                            IdParentSkill = 2
                        },
                        new
                        {
                            Id = 6,
                            IdChildSkill = 13,
                            IdParentSkill = 2
                        },
                        new
                        {
                            Id = 7,
                            IdChildSkill = 14,
                            IdParentSkill = 3
                        },
                        new
                        {
                            Id = 8,
                            IdChildSkill = 15,
                            IdParentSkill = 3
                        },
                        new
                        {
                            Id = 9,
                            IdChildSkill = 16,
                            IdParentSkill = 3
                        },
                        new
                        {
                            Id = 10,
                            IdChildSkill = 17,
                            IdParentSkill = 4
                        },
                        new
                        {
                            Id = 11,
                            IdChildSkill = 18,
                            IdParentSkill = 4
                        },
                        new
                        {
                            Id = 12,
                            IdChildSkill = 19,
                            IdParentSkill = 4
                        },
                        new
                        {
                            Id = 13,
                            IdChildSkill = 20,
                            IdParentSkill = 5
                        });
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.UserSkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_UserSkill")
                        .UseIdentityColumn();

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdEmployee")
                        .HasColumnType("int");

                    b.Property<string>("Skillname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("XPKUserSkill");

                    b.HasIndex("IdEmployee");

                    b.ToTable("UserSkills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Hard skill",
                            EndDate = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdEmployee = 1,
                            Skillname = "С# Basics",
                            StartDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Category = "Hard skill",
                            EndDate = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdEmployee = 1,
                            Skillname = "C# Classes OOP",
                            StartDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Category = "Hard skill",
                            EndDate = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdEmployee = 1,
                            Skillname = "C# Exception",
                            StartDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Category = "Hard skill",
                            EndDate = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdEmployee = 1,
                            Skillname = "C# Delegate",
                            StartDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Category = "Hard skill",
                            EndDate = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdEmployee = 1,
                            Skillname = "C# Interface",
                            StartDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            Category = "Hard skill",
                            EndDate = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdEmployee = 1,
                            Skillname = "C# Collections",
                            StartDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            Category = "Hard skill",
                            EndDate = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdEmployee = 1,
                            Skillname = "C# String",
                            StartDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            Category = "Hard skill",
                            EndDate = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdEmployee = 1,
                            Skillname = "C# Variables",
                            StartDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            Category = "Hard skill",
                            EndDate = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdEmployee = 1,
                            Skillname = "C# Data types",
                            StartDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            Category = "Hard skill",
                            EndDate = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdEmployee = 1,
                            Skillname = "C# Cycles",
                            StartDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            Category = "Hard skill",
                            EndDate = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdEmployee = 1,
                            Skillname = "C# Classes and objects",
                            StartDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            Category = "Hard skill",
                            EndDate = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdEmployee = 1,
                            Skillname = "C# Structures",
                            StartDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            Category = "Hard skill",
                            EndDate = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdEmployee = 1,
                            Skillname = "C# Access modifiers",
                            StartDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            Category = "Hard skill",
                            EndDate = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdEmployee = 1,
                            Skillname = "C# Try..catch..finally",
                            StartDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            Category = "Hard skill",
                            EndDate = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdEmployee = 1,
                            Skillname = "C# Exception types. Exception class",
                            StartDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16,
                            Category = "Hard skill",
                            EndDate = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdEmployee = 1,
                            Skillname = "C# Creating Exception Classes",
                            StartDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 17,
                            Category = "Hard skill",
                            EndDate = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdEmployee = 1,
                            Skillname = "C# Delegates",
                            StartDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 18,
                            Category = "Hard skill",
                            EndDate = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdEmployee = 1,
                            Skillname = "C# Lambdas",
                            StartDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 19,
                            Category = "Hard skill",
                            EndDate = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdEmployee = 1,
                            Skillname = "C# Anonymous methods",
                            StartDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 20,
                            Category = "Hard skill",
                            EndDate = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdEmployee = 1,
                            Skillname = "C# Defining interfaces",
                            StartDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.Comment", b =>
                {
                    b.HasOne("SkillRoadmapBack.Core.Models.Employer", "IdEmployerNavigation")
                        .WithMany("Comments")
                        .HasForeignKey("IdEmployer")
                        .HasConstraintName("R_2");

                    b.HasOne("SkillRoadmapBack.Core.Models.UserSkill", "IdUserSkillNavigation")
                        .WithMany("Comments")
                        .HasForeignKey("IdUserSkill")
                        .HasConstraintName("R_3");

                    b.Navigation("IdEmployerNavigation");

                    b.Navigation("IdUserSkillNavigation");
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.Notification", b =>
                {
                    b.HasOne("SkillRoadmapBack.Core.Models.Employee", "IdEmployeeNavigation")
                        .WithMany("Notifications")
                        .HasForeignKey("IdEmployee")
                        .HasConstraintName("R_6");

                    b.HasOne("SkillRoadmapBack.Core.Models.Employer", "IdEmployerNavigation")
                        .WithMany("Notifications")
                        .HasForeignKey("IdEmployer")
                        .HasConstraintName("R_4");

                    b.HasOne("SkillRoadmapBack.Core.Models.UserSkill", "IdUserSkillNavigation")
                        .WithMany("Notifications")
                        .HasForeignKey("IdUserSkill")
                        .HasConstraintName("R_5");

                    b.Navigation("IdEmployeeNavigation");

                    b.Navigation("IdEmployerNavigation");

                    b.Navigation("IdUserSkillNavigation");
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.SkillDistribution", b =>
                {
                    b.HasOne("SkillRoadmapBack.Core.Models.UserSkill", "IdChildSkillNavigation")
                        .WithMany("ChildSkillDistributions")
                        .HasForeignKey("IdChildSkill")
                        .HasConstraintName("R_8");

                    b.HasOne("SkillRoadmapBack.Core.Models.UserSkill", "IdParentSkillNavigation")
                        .WithMany("ParentSkillDistributions")
                        .HasForeignKey("IdParentSkill")
                        .HasConstraintName("R_7");

                    b.Navigation("IdChildSkillNavigation");

                    b.Navigation("IdParentSkillNavigation");
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.UserSkill", b =>
                {
                    b.HasOne("SkillRoadmapBack.Core.Models.Employee", "IdEmployeeNavigation")
                        .WithMany("UserSkills")
                        .HasForeignKey("IdEmployee")
                        .HasConstraintName("R_1");

                    b.Navigation("IdEmployeeNavigation");
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.Employee", b =>
                {
                    b.Navigation("Notifications");

                    b.Navigation("UserSkills");
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.Employer", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.UserSkill", b =>
                {
                    b.Navigation("ChildSkillDistributions");

                    b.Navigation("Comments");

                    b.Navigation("Notifications");

                    b.Navigation("ParentSkillDistributions");
                });
#pragma warning restore 612, 618
        }
    }
}
