// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SkillRoadMapBack.DAL;

namespace SkillRoadMapBack.DAL.Migrations
{
    [DbContext(typeof(SkillRoadMapDbContext))]
    partial class SkillRoadMapDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Category")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("XPKCategory");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Includes programming on different languages as C#, Java, Python, Kotlin, C++",
                            Title = "Programming"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Includes different types of software testing",
                            Title = "Testing"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Includes db design, processes design, software architecture",
                            Title = "Designing"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Includes db design, processes design, software architecture",
                            Title = "Frontend"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Includes db design, processes design, software architecture",
                            Title = "Database"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Includes db design, processes design, software architecture",
                            Title = "Mobile"
                        });
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.Certificate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Certificate")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CertificateTitle")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("DateOfIssue")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdPublisher")
                        .HasColumnType("int");

                    b.Property<int?>("IdRecipient")
                        .HasColumnType("int");

                    b.Property<int?>("IdUserSkill")
                        .HasColumnType("int");

                    b.Property<int>("SkillLevel")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("XPKCertificate");

                    b.HasIndex("IdPublisher");

                    b.HasIndex("IdRecipient");

                    b.HasIndex("IdUserSkill");

                    b.ToTable("Certificates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CertificateTitle = "Our company present you certificate",
                            DateOfIssue = new DateTime(2021, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiryDate = new DateTime(2022, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdPublisher = 1,
                            IdRecipient = 1,
                            IdUserSkill = 1,
                            SkillLevel = 5
                        },
                        new
                        {
                            Id = 2,
                            CertificateTitle = "Our company present you certificate",
                            DateOfIssue = new DateTime(2021, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiryDate = new DateTime(2022, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdPublisher = 1,
                            IdRecipient = 1,
                            IdUserSkill = 2,
                            SkillLevel = 4
                        },
                        new
                        {
                            Id = 3,
                            CertificateTitle = "Our company present you certificate",
                            DateOfIssue = new DateTime(2021, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiryDate = new DateTime(2022, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdPublisher = 1,
                            IdRecipient = 1,
                            IdUserSkill = 3,
                            SkillLevel = 5
                        },
                        new
                        {
                            Id = 4,
                            CertificateTitle = "Our company present you certificate",
                            DateOfIssue = new DateTime(2021, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiryDate = new DateTime(2022, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdPublisher = 1,
                            IdRecipient = 1,
                            IdUserSkill = 4,
                            SkillLevel = 4
                        },
                        new
                        {
                            Id = 5,
                            CertificateTitle = "Our company present you certificate",
                            DateOfIssue = new DateTime(2021, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiryDate = new DateTime(2022, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdPublisher = 1,
                            IdRecipient = 1,
                            IdUserSkill = 5,
                            SkillLevel = 5
                        },
                        new
                        {
                            Id = 6,
                            CertificateTitle = "Our company present you certificate",
                            DateOfIssue = new DateTime(2021, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiryDate = new DateTime(2022, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdPublisher = 1,
                            IdRecipient = 2,
                            IdUserSkill = 1,
                            SkillLevel = 4
                        },
                        new
                        {
                            Id = 7,
                            CertificateTitle = "Our company present you certificate",
                            DateOfIssue = new DateTime(2021, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiryDate = new DateTime(2022, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdPublisher = 1,
                            IdRecipient = 2,
                            IdUserSkill = 1,
                            SkillLevel = 5
                        },
                        new
                        {
                            Id = 8,
                            CertificateTitle = "Our company present you certificate",
                            DateOfIssue = new DateTime(2021, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiryDate = new DateTime(2022, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdPublisher = 1,
                            IdRecipient = 2,
                            IdUserSkill = 1,
                            SkillLevel = 4
                        },
                        new
                        {
                            Id = 9,
                            CertificateTitle = "Our company present you certificate",
                            DateOfIssue = new DateTime(2021, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiryDate = new DateTime(2022, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdPublisher = 1,
                            IdRecipient = 2,
                            IdUserSkill = 1,
                            SkillLevel = 4
                        },
                        new
                        {
                            Id = 10,
                            CertificateTitle = "Our company present you certificate",
                            DateOfIssue = new DateTime(2021, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpiryDate = new DateTime(2022, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdPublisher = 1,
                            IdRecipient = 1,
                            IdUserSkill = 1,
                            SkillLevel = 5
                        });
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Comment")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CommentText")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("IdEmployer")
                        .HasColumnType("int");

                    b.Property<int?>("IdUserSkill")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("XPKComment");

                    b.HasIndex("IdEmployer");

                    b.HasIndex("IdUserSkill");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CommentText = "Need to learn C#",
                            IdEmployer = 1,
                            IdUserSkill = 1
                        },
                        new
                        {
                            Id = 2,
                            CommentText = "Need to learn C#",
                            IdEmployer = 1,
                            IdUserSkill = 2
                        },
                        new
                        {
                            Id = 3,
                            CommentText = "Need to learn C#",
                            IdEmployer = 1,
                            IdUserSkill = 3
                        },
                        new
                        {
                            Id = 4,
                            CommentText = "Need to learn C#",
                            IdEmployer = 1,
                            IdUserSkill = 4
                        },
                        new
                        {
                            Id = 5,
                            CommentText = "Need to learn C#",
                            IdEmployer = 1,
                            IdUserSkill = 5
                        });
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Company")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ContactPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("EmployeesCount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Specialization")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id")
                        .HasName("XPKCompany");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Lviv, Grabovskogo 11",
                            ContactPhone = "032-297-46-55",
                            Description = "Some description about company",
                            EmployeesCount = 500,
                            Name = "InterLogic",
                            Specialization = "Software"
                        });
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Employee")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DevLevel")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("Experience")
                        .HasColumnType("float");

                    b.Property<string>("Firstname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("IdCompany")
                        .HasColumnType("int");

                    b.Property<int?>("IdMentor")
                        .HasColumnType("int");

                    b.Property<string>("Lastname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("XPKEmployee");

                    b.HasIndex("IdCompany");

                    b.HasIndex("IdMentor");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DevLevel = "Trainee C#",
                            Email = "ilivocs@gmail.com",
                            Experience = 5.0,
                            Firstname = "Oksana",
                            IdCompany = 1,
                            IdMentor = 3,
                            Lastname = "Iliv",
                            Password = "_Aa123456",
                            Role = "User"
                        },
                        new
                        {
                            Id = 2,
                            DevLevel = "Junior C#",
                            Email = "turyanmykh@gmail.com",
                            Experience = 5.0,
                            Firstname = "Mykhailo",
                            IdCompany = 1,
                            IdMentor = 3,
                            Lastname = "Turianskyi",
                            Password = "_Aa123456",
                            Role = "User"
                        },
                        new
                        {
                            Id = 3,
                            DevLevel = "Middle C#",
                            Email = "stasenoleks@gmail.com",
                            Experience = 5.0,
                            Firstname = "Oleksandr",
                            IdCompany = 1,
                            IdMentor = 3,
                            Lastname = "Stasenko",
                            Password = "_Aa123456",
                            Role = "User"
                        },
                        new
                        {
                            Id = 4,
                            DevLevel = "Senior C#",
                            Email = "pynzynyura@gmail.com",
                            Experience = 5.0,
                            Firstname = "Yurii",
                            IdCompany = 1,
                            IdMentor = 4,
                            Lastname = "Pynzyn",
                            Password = "_Aa123456",
                            Role = "User"
                        },
                        new
                        {
                            Id = 5,
                            DevLevel = "Middle C#",
                            Email = "hladyoandr@gmail.com",
                            Experience = 5.0,
                            Firstname = "Andrii",
                            IdCompany = 1,
                            IdMentor = 4,
                            Lastname = "Hlado",
                            Password = "_Aa123456",
                            Role = "User"
                        });
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.Employer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Employer")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Firstname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("IdCompany")
                        .HasColumnType("int");

                    b.Property<string>("Lastname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("XPKEmployer");

                    b.HasIndex("IdCompany");

                    b.ToTable("Employers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "melnykmyk@gmail.com",
                            Firstname = "Mykola",
                            IdCompany = 1,
                            Lastname = "Melnyk",
                            Password = "_Aa123456",
                            Role = "HR"
                        },
                        new
                        {
                            Id = 2,
                            Email = "shevchenkovol@gmail.com",
                            Firstname = "Volodymyr",
                            IdCompany = 1,
                            Lastname = "Shevchenko",
                            Password = "_Aa123456",
                            Role = "HR"
                        },
                        new
                        {
                            Id = 3,
                            Email = "boikoolek@gmail.com",
                            Firstname = "Oleksandr",
                            IdCompany = 1,
                            Lastname = "Boiko",
                            Password = "_Aa123456",
                            Role = "Mentor"
                        },
                        new
                        {
                            Id = 4,
                            Email = "kovalenkoiv@gmail.com",
                            Firstname = "Ivan",
                            IdCompany = 1,
                            Lastname = "Kovalenko",
                            Password = "_Aa123456",
                            Role = "Mentor"
                        },
                        new
                        {
                            Id = 5,
                            Email = "bondarenkovas@gmail.com",
                            Firstname = "Vasyl",
                            IdCompany = 1,
                            Lastname = "Bondarenko",
                            Password = "_Aa123456",
                            Role = "Mentor"
                        });
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Notification")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdEmployee")
                        .HasColumnType("int");

                    b.Property<int?>("IdEmployer")
                        .HasColumnType("int");

                    b.Property<int?>("IdUserSkill")
                        .HasColumnType("int");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("NotificationText")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("SendingDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("XPKNotification");

                    b.HasIndex("IdEmployee");

                    b.HasIndex("IdEmployer");

                    b.HasIndex("IdUserSkill");

                    b.ToTable("Notifications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdEmployee = 1,
                            IdEmployer = 1,
                            IdUserSkill = 8,
                            IsRead = false,
                            NotificationText = "Need to learn C#",
                            SendingDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            IdEmployee = 1,
                            IdEmployer = 1,
                            IdUserSkill = 9,
                            IsRead = false,
                            NotificationText = "Need to learn C#",
                            SendingDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            IdEmployee = 1,
                            IdEmployer = 1,
                            IdUserSkill = 10,
                            IsRead = false,
                            NotificationText = "Need to learn C#",
                            SendingDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            IdEmployee = 1,
                            IdEmployer = 1,
                            IdUserSkill = 11,
                            IsRead = false,
                            NotificationText = "Need to learn C#",
                            SendingDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            IdEmployee = 1,
                            IdEmployer = 1,
                            IdUserSkill = 12,
                            IsRead = false,
                            NotificationText = "Need to learn C#",
                            SendingDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.Recommendation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Recommendation")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdEmployee")
                        .HasColumnType("int");

                    b.Property<int?>("IdTraining")
                        .HasColumnType("int");

                    b.Property<string>("Invitation")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.HasKey("Id")
                        .HasName("XPKRecommendation");

                    b.HasIndex("IdEmployee");

                    b.HasIndex("IdTraining");

                    b.ToTable("Recommendations");
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.SkillMetric", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_SkillMetric")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdUserSkill")
                        .HasColumnType("int");

                    b.Property<double>("MetricInfluence")
                        .HasColumnType("float");

                    b.Property<string>("MetricName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("MetricValue")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("XPKSkillMetric");

                    b.HasIndex("IdUserSkill");

                    b.ToTable("SkillMetrics");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdUserSkill = 1,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Interest in studying",
                            MetricValue = 3
                        },
                        new
                        {
                            Id = 2,
                            IdUserSkill = 1,
                            MetricInfluence = 0.40000000000000002,
                            MetricName = "Quality of the studied material",
                            MetricValue = 4
                        },
                        new
                        {
                            Id = 3,
                            IdUserSkill = 1,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Use in practice",
                            MetricValue = 5
                        },
                        new
                        {
                            Id = 4,
                            IdUserSkill = 2,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Interest in studying",
                            MetricValue = 3
                        },
                        new
                        {
                            Id = 5,
                            IdUserSkill = 2,
                            MetricInfluence = 0.40000000000000002,
                            MetricName = "Quality of the studied material",
                            MetricValue = 4
                        },
                        new
                        {
                            Id = 6,
                            IdUserSkill = 2,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Use in practice",
                            MetricValue = 5
                        },
                        new
                        {
                            Id = 7,
                            IdUserSkill = 3,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Interest in studying",
                            MetricValue = 3
                        },
                        new
                        {
                            Id = 8,
                            IdUserSkill = 3,
                            MetricInfluence = 0.40000000000000002,
                            MetricName = "Quality of the studied material",
                            MetricValue = 4
                        },
                        new
                        {
                            Id = 9,
                            IdUserSkill = 3,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Use in practice",
                            MetricValue = 5
                        },
                        new
                        {
                            Id = 10,
                            IdUserSkill = 4,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Interest in studying",
                            MetricValue = 3
                        },
                        new
                        {
                            Id = 11,
                            IdUserSkill = 4,
                            MetricInfluence = 0.40000000000000002,
                            MetricName = "Quality of the studied material",
                            MetricValue = 4
                        },
                        new
                        {
                            Id = 12,
                            IdUserSkill = 4,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Use in practice",
                            MetricValue = 5
                        },
                        new
                        {
                            Id = 13,
                            IdUserSkill = 5,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Interest in studying",
                            MetricValue = 3
                        },
                        new
                        {
                            Id = 14,
                            IdUserSkill = 5,
                            MetricInfluence = 0.40000000000000002,
                            MetricName = "Quality of the studied material",
                            MetricValue = 4
                        },
                        new
                        {
                            Id = 15,
                            IdUserSkill = 5,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Use in practice",
                            MetricValue = 5
                        },
                        new
                        {
                            Id = 16,
                            IdUserSkill = 6,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Interest in studying",
                            MetricValue = 3
                        },
                        new
                        {
                            Id = 17,
                            IdUserSkill = 6,
                            MetricInfluence = 0.40000000000000002,
                            MetricName = "Quality of the studied material",
                            MetricValue = 4
                        },
                        new
                        {
                            Id = 18,
                            IdUserSkill = 6,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Use in practice",
                            MetricValue = 5
                        },
                        new
                        {
                            Id = 19,
                            IdUserSkill = 7,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Interest in studying",
                            MetricValue = 3
                        },
                        new
                        {
                            Id = 20,
                            IdUserSkill = 7,
                            MetricInfluence = 0.40000000000000002,
                            MetricName = "Quality of the studied material",
                            MetricValue = 4
                        },
                        new
                        {
                            Id = 21,
                            IdUserSkill = 7,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Use in practice",
                            MetricValue = 5
                        },
                        new
                        {
                            Id = 22,
                            IdUserSkill = 8,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Interest in studying",
                            MetricValue = 3
                        },
                        new
                        {
                            Id = 23,
                            IdUserSkill = 8,
                            MetricInfluence = 0.40000000000000002,
                            MetricName = "Quality of the studied material",
                            MetricValue = 4
                        },
                        new
                        {
                            Id = 24,
                            IdUserSkill = 8,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Use in practice",
                            MetricValue = 5
                        },
                        new
                        {
                            Id = 25,
                            IdUserSkill = 9,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Interest in studying",
                            MetricValue = 3
                        },
                        new
                        {
                            Id = 26,
                            IdUserSkill = 9,
                            MetricInfluence = 0.40000000000000002,
                            MetricName = "Quality of the studied material",
                            MetricValue = 4
                        },
                        new
                        {
                            Id = 27,
                            IdUserSkill = 9,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Use in practice",
                            MetricValue = 5
                        },
                        new
                        {
                            Id = 28,
                            IdUserSkill = 10,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Interest in studying",
                            MetricValue = 3
                        },
                        new
                        {
                            Id = 29,
                            IdUserSkill = 10,
                            MetricInfluence = 0.40000000000000002,
                            MetricName = "Quality of the studied material",
                            MetricValue = 4
                        },
                        new
                        {
                            Id = 30,
                            IdUserSkill = 10,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Use in practice",
                            MetricValue = 5
                        },
                        new
                        {
                            Id = 31,
                            IdUserSkill = 11,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Interest in studying",
                            MetricValue = 3
                        },
                        new
                        {
                            Id = 32,
                            IdUserSkill = 11,
                            MetricInfluence = 0.40000000000000002,
                            MetricName = "Quality of the studied material",
                            MetricValue = 4
                        },
                        new
                        {
                            Id = 33,
                            IdUserSkill = 11,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Use in practice",
                            MetricValue = 5
                        },
                        new
                        {
                            Id = 34,
                            IdUserSkill = 12,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Interest in studying",
                            MetricValue = 3
                        },
                        new
                        {
                            Id = 35,
                            IdUserSkill = 12,
                            MetricInfluence = 0.40000000000000002,
                            MetricName = "Quality of the studied material",
                            MetricValue = 4
                        },
                        new
                        {
                            Id = 36,
                            IdUserSkill = 12,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Use in practice",
                            MetricValue = 5
                        },
                        new
                        {
                            Id = 37,
                            IdUserSkill = 13,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Interest in studying",
                            MetricValue = 3
                        },
                        new
                        {
                            Id = 38,
                            IdUserSkill = 13,
                            MetricInfluence = 0.40000000000000002,
                            MetricName = "Quality of the studied material",
                            MetricValue = 4
                        },
                        new
                        {
                            Id = 39,
                            IdUserSkill = 13,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Use in practice",
                            MetricValue = 5
                        },
                        new
                        {
                            Id = 40,
                            IdUserSkill = 14,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Interest in studying",
                            MetricValue = 3
                        },
                        new
                        {
                            Id = 41,
                            IdUserSkill = 14,
                            MetricInfluence = 0.40000000000000002,
                            MetricName = "Quality of the studied material",
                            MetricValue = 4
                        },
                        new
                        {
                            Id = 42,
                            IdUserSkill = 14,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Use in practice",
                            MetricValue = 5
                        },
                        new
                        {
                            Id = 43,
                            IdUserSkill = 15,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Interest in studying",
                            MetricValue = 3
                        },
                        new
                        {
                            Id = 44,
                            IdUserSkill = 15,
                            MetricInfluence = 0.40000000000000002,
                            MetricName = "Quality of the studied material",
                            MetricValue = 4
                        },
                        new
                        {
                            Id = 45,
                            IdUserSkill = 15,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Use in practice",
                            MetricValue = 5
                        },
                        new
                        {
                            Id = 46,
                            IdUserSkill = 16,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Interest in studying",
                            MetricValue = 3
                        },
                        new
                        {
                            Id = 47,
                            IdUserSkill = 16,
                            MetricInfluence = 0.40000000000000002,
                            MetricName = "Quality of the studied material",
                            MetricValue = 4
                        },
                        new
                        {
                            Id = 48,
                            IdUserSkill = 16,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Use in practice",
                            MetricValue = 5
                        },
                        new
                        {
                            Id = 49,
                            IdUserSkill = 17,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Interest in studying",
                            MetricValue = 3
                        },
                        new
                        {
                            Id = 50,
                            IdUserSkill = 17,
                            MetricInfluence = 0.40000000000000002,
                            MetricName = "Quality of the studied material",
                            MetricValue = 4
                        },
                        new
                        {
                            Id = 51,
                            IdUserSkill = 17,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Use in practice",
                            MetricValue = 5
                        },
                        new
                        {
                            Id = 52,
                            IdUserSkill = 18,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Interest in studying",
                            MetricValue = 3
                        },
                        new
                        {
                            Id = 53,
                            IdUserSkill = 18,
                            MetricInfluence = 0.40000000000000002,
                            MetricName = "Quality of the studied material",
                            MetricValue = 4
                        },
                        new
                        {
                            Id = 54,
                            IdUserSkill = 18,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Use in practice",
                            MetricValue = 5
                        },
                        new
                        {
                            Id = 55,
                            IdUserSkill = 19,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Interest in studying",
                            MetricValue = 3
                        },
                        new
                        {
                            Id = 56,
                            IdUserSkill = 19,
                            MetricInfluence = 0.40000000000000002,
                            MetricName = "Quality of the studied material",
                            MetricValue = 4
                        },
                        new
                        {
                            Id = 57,
                            IdUserSkill = 19,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Use in practice",
                            MetricValue = 5
                        },
                        new
                        {
                            Id = 58,
                            IdUserSkill = 20,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Interest in studying",
                            MetricValue = 3
                        },
                        new
                        {
                            Id = 59,
                            IdUserSkill = 20,
                            MetricInfluence = 0.40000000000000002,
                            MetricName = "Quality of the studied material",
                            MetricValue = 4
                        },
                        new
                        {
                            Id = 60,
                            IdUserSkill = 20,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Use in practice",
                            MetricValue = 5
                        },
                        new
                        {
                            Id = 61,
                            IdUserSkill = 21,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Interest in studying",
                            MetricValue = 3
                        },
                        new
                        {
                            Id = 62,
                            IdUserSkill = 21,
                            MetricInfluence = 0.40000000000000002,
                            MetricName = "Quality of the studied material",
                            MetricValue = 4
                        },
                        new
                        {
                            Id = 63,
                            IdUserSkill = 21,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Use in practice",
                            MetricValue = 5
                        },
                        new
                        {
                            Id = 64,
                            IdUserSkill = 22,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Interest in studying",
                            MetricValue = 3
                        },
                        new
                        {
                            Id = 65,
                            IdUserSkill = 22,
                            MetricInfluence = 0.40000000000000002,
                            MetricName = "Quality of the studied material",
                            MetricValue = 4
                        },
                        new
                        {
                            Id = 66,
                            IdUserSkill = 22,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Use in practice",
                            MetricValue = 5
                        },
                        new
                        {
                            Id = 67,
                            IdUserSkill = 23,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Interest in studying",
                            MetricValue = 3
                        },
                        new
                        {
                            Id = 68,
                            IdUserSkill = 23,
                            MetricInfluence = 0.40000000000000002,
                            MetricName = "Quality of the studied material",
                            MetricValue = 4
                        },
                        new
                        {
                            Id = 69,
                            IdUserSkill = 23,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Use in practice",
                            MetricValue = 5
                        },
                        new
                        {
                            Id = 70,
                            IdUserSkill = 24,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Interest in studying",
                            MetricValue = 3
                        },
                        new
                        {
                            Id = 71,
                            IdUserSkill = 24,
                            MetricInfluence = 0.40000000000000002,
                            MetricName = "Quality of the studied material",
                            MetricValue = 4
                        },
                        new
                        {
                            Id = 72,
                            IdUserSkill = 24,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Use in practice",
                            MetricValue = 5
                        },
                        new
                        {
                            Id = 73,
                            IdUserSkill = 25,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Interest in studying",
                            MetricValue = 3
                        },
                        new
                        {
                            Id = 74,
                            IdUserSkill = 25,
                            MetricInfluence = 0.40000000000000002,
                            MetricName = "Quality of the studied material",
                            MetricValue = 4
                        },
                        new
                        {
                            Id = 75,
                            IdUserSkill = 25,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Use in practice",
                            MetricValue = 5
                        },
                        new
                        {
                            Id = 76,
                            IdUserSkill = 26,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Interest in studying",
                            MetricValue = 3
                        },
                        new
                        {
                            Id = 77,
                            IdUserSkill = 26,
                            MetricInfluence = 0.40000000000000002,
                            MetricName = "Quality of the studied material",
                            MetricValue = 4
                        },
                        new
                        {
                            Id = 78,
                            IdUserSkill = 26,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Use in practice",
                            MetricValue = 5
                        },
                        new
                        {
                            Id = 79,
                            IdUserSkill = 27,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Interest in studying",
                            MetricValue = 3
                        },
                        new
                        {
                            Id = 80,
                            IdUserSkill = 27,
                            MetricInfluence = 0.40000000000000002,
                            MetricName = "Quality of the studied material",
                            MetricValue = 4
                        },
                        new
                        {
                            Id = 81,
                            IdUserSkill = 27,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Use in practice",
                            MetricValue = 5
                        },
                        new
                        {
                            Id = 82,
                            IdUserSkill = 28,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Interest in studying",
                            MetricValue = 3
                        },
                        new
                        {
                            Id = 83,
                            IdUserSkill = 28,
                            MetricInfluence = 0.40000000000000002,
                            MetricName = "Quality of the studied material",
                            MetricValue = 4
                        },
                        new
                        {
                            Id = 84,
                            IdUserSkill = 28,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Use in practice",
                            MetricValue = 5
                        },
                        new
                        {
                            Id = 85,
                            IdUserSkill = 29,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Interest in studying",
                            MetricValue = 3
                        },
                        new
                        {
                            Id = 86,
                            IdUserSkill = 29,
                            MetricInfluence = 0.40000000000000002,
                            MetricName = "Quality of the studied material",
                            MetricValue = 4
                        },
                        new
                        {
                            Id = 87,
                            IdUserSkill = 29,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Use in practice",
                            MetricValue = 5
                        },
                        new
                        {
                            Id = 88,
                            IdUserSkill = 30,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Interest in studying",
                            MetricValue = 3
                        },
                        new
                        {
                            Id = 89,
                            IdUserSkill = 30,
                            MetricInfluence = 0.40000000000000002,
                            MetricName = "Quality of the studied material",
                            MetricValue = 4
                        },
                        new
                        {
                            Id = 90,
                            IdUserSkill = 30,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Use in practice",
                            MetricValue = 5
                        },
                        new
                        {
                            Id = 91,
                            IdUserSkill = 31,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Interest in studying",
                            MetricValue = 3
                        },
                        new
                        {
                            Id = 92,
                            IdUserSkill = 31,
                            MetricInfluence = 0.40000000000000002,
                            MetricName = "Quality of the studied material",
                            MetricValue = 4
                        },
                        new
                        {
                            Id = 93,
                            IdUserSkill = 31,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Use in practice",
                            MetricValue = 5
                        },
                        new
                        {
                            Id = 94,
                            IdUserSkill = 32,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Interest in studying",
                            MetricValue = 3
                        },
                        new
                        {
                            Id = 95,
                            IdUserSkill = 32,
                            MetricInfluence = 0.40000000000000002,
                            MetricName = "Quality of the studied material",
                            MetricValue = 4
                        },
                        new
                        {
                            Id = 96,
                            IdUserSkill = 32,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Use in practice",
                            MetricValue = 5
                        },
                        new
                        {
                            Id = 97,
                            IdUserSkill = 33,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Interest in studying",
                            MetricValue = 3
                        },
                        new
                        {
                            Id = 98,
                            IdUserSkill = 33,
                            MetricInfluence = 0.40000000000000002,
                            MetricName = "Quality of the studied material",
                            MetricValue = 4
                        },
                        new
                        {
                            Id = 99,
                            IdUserSkill = 33,
                            MetricInfluence = 0.29999999999999999,
                            MetricName = "Use in practice",
                            MetricValue = 5
                        });
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.SkillUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_SkillUnit")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdUserSkill")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UnitLevel")
                        .HasColumnType("int");

                    b.Property<string>("Unitname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("XPKSkillUnit");

                    b.HasIndex("IdUserSkill");

                    b.ToTable("SkillUnits");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDate = new DateTime(2021, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 1,
                            StartDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 2,
                            Unitname = "C# Variables"
                        },
                        new
                        {
                            Id = 2,
                            EndDate = new DateTime(2021, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 1,
                            StartDate = new DateTime(2021, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 3,
                            Unitname = "C# Data types"
                        },
                        new
                        {
                            Id = 3,
                            EndDate = new DateTime(2021, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 1,
                            StartDate = new DateTime(2021, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "C# Cycles"
                        },
                        new
                        {
                            Id = 4,
                            EndDate = new DateTime(2021, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 2,
                            StartDate = new DateTime(2021, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 3,
                            Unitname = "C# Classes and objects"
                        },
                        new
                        {
                            Id = 5,
                            EndDate = new DateTime(2021, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 2,
                            StartDate = new DateTime(2021, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "C# Structures"
                        },
                        new
                        {
                            Id = 6,
                            EndDate = new DateTime(2021, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 2,
                            StartDate = new DateTime(2021, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 5,
                            Unitname = "C# Access modifiers"
                        },
                        new
                        {
                            Id = 7,
                            EndDate = new DateTime(2021, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 3,
                            StartDate = new DateTime(2021, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 5,
                            Unitname = "C# Try..catch..finally"
                        },
                        new
                        {
                            Id = 8,
                            EndDate = new DateTime(2021, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 3,
                            StartDate = new DateTime(2021, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "C# Exception types. Exception class"
                        },
                        new
                        {
                            Id = 9,
                            EndDate = new DateTime(2021, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 3,
                            StartDate = new DateTime(2021, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 5,
                            Unitname = "C# Creating Exception Classes"
                        },
                        new
                        {
                            Id = 10,
                            EndDate = new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 4,
                            StartDate = new DateTime(2021, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 3,
                            Unitname = "C# Delegates"
                        },
                        new
                        {
                            Id = 11,
                            EndDate = new DateTime(2021, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 4,
                            StartDate = new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "C# Lambdas"
                        },
                        new
                        {
                            Id = 12,
                            EndDate = new DateTime(2021, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 4,
                            StartDate = new DateTime(2021, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 5,
                            Unitname = "C# Anonymous methods"
                        },
                        new
                        {
                            Id = 13,
                            EndDate = new DateTime(2021, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 5,
                            StartDate = new DateTime(2021, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 2,
                            Unitname = "C# Defining interfaces"
                        },
                        new
                        {
                            Id = 14,
                            EndDate = new DateTime(2021, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 5,
                            StartDate = new DateTime(2021, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "C# Template interfaces"
                        },
                        new
                        {
                            Id = 15,
                            EndDate = new DateTime(2021, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 8,
                            StartDate = new DateTime(2021, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 2,
                            Unitname = "Security testing"
                        },
                        new
                        {
                            Id = 16,
                            EndDate = new DateTime(2021, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 8,
                            StartDate = new DateTime(2021, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 3,
                            Unitname = "Performance testing"
                        },
                        new
                        {
                            Id = 17,
                            EndDate = new DateTime(2021, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 8,
                            StartDate = new DateTime(2021, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Smoke testing"
                        },
                        new
                        {
                            Id = 18,
                            EndDate = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 9,
                            StartDate = new DateTime(2021, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 3,
                            Unitname = "Functional testing"
                        },
                        new
                        {
                            Id = 19,
                            EndDate = new DateTime(2021, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 9,
                            StartDate = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Non-functional testing"
                        },
                        new
                        {
                            Id = 20,
                            EndDate = new DateTime(2021, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 9,
                            StartDate = new DateTime(2021, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 5,
                            Unitname = "Сhange testing"
                        },
                        new
                        {
                            Id = 21,
                            EndDate = new DateTime(2021, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 10,
                            StartDate = new DateTime(2021, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 5,
                            Unitname = "Black box"
                        },
                        new
                        {
                            Id = 22,
                            EndDate = new DateTime(2021, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 10,
                            StartDate = new DateTime(2021, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 5,
                            Unitname = "White box"
                        },
                        new
                        {
                            Id = 23,
                            EndDate = new DateTime(2021, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 10,
                            StartDate = new DateTime(2021, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 5,
                            Unitname = "Gray box"
                        },
                        new
                        {
                            Id = 24,
                            EndDate = new DateTime(2021, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 11,
                            StartDate = new DateTime(2021, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 2,
                            Unitname = "Manual testing"
                        },
                        new
                        {
                            Id = 25,
                            EndDate = new DateTime(2021, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 11,
                            StartDate = new DateTime(2021, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 3,
                            Unitname = "Automated testing"
                        },
                        new
                        {
                            Id = 26,
                            EndDate = new DateTime(2021, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 11,
                            StartDate = new DateTime(2021, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Semiautomated testing"
                        },
                        new
                        {
                            Id = 27,
                            EndDate = new DateTime(2021, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 12,
                            StartDate = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 3,
                            Unitname = "Component testing"
                        },
                        new
                        {
                            Id = 28,
                            EndDate = new DateTime(2021, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 12,
                            StartDate = new DateTime(2021, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Integration testing"
                        },
                        new
                        {
                            Id = 29,
                            EndDate = new DateTime(2021, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 12,
                            StartDate = new DateTime(2021, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 5,
                            Unitname = "System testing"
                        },
                        new
                        {
                            Id = 30,
                            EndDate = new DateTime(2021, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 13,
                            StartDate = new DateTime(2021, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 1,
                            Unitname = "IDEF0 design"
                        },
                        new
                        {
                            Id = 31,
                            EndDate = new DateTime(2021, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 13,
                            StartDate = new DateTime(2021, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 2,
                            Unitname = "DFD design"
                        },
                        new
                        {
                            Id = 32,
                            EndDate = new DateTime(2021, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 13,
                            StartDate = new DateTime(2021, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 3,
                            Unitname = "IDEF3 design"
                        },
                        new
                        {
                            Id = 33,
                            EndDate = new DateTime(2021, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 14,
                            StartDate = new DateTime(2021, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 3,
                            Unitname = "Class diagram"
                        },
                        new
                        {
                            Id = 34,
                            EndDate = new DateTime(2021, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 14,
                            StartDate = new DateTime(2021, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Use case diagram"
                        },
                        new
                        {
                            Id = 35,
                            EndDate = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 14,
                            StartDate = new DateTime(2021, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 5,
                            Unitname = "Component diagram"
                        },
                        new
                        {
                            Id = 36,
                            EndDate = new DateTime(2021, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 15,
                            StartDate = new DateTime(2021, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 5,
                            Unitname = "Factory pattern"
                        },
                        new
                        {
                            Id = 37,
                            EndDate = new DateTime(2021, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 15,
                            StartDate = new DateTime(2021, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 3,
                            Unitname = "Moment pattern"
                        },
                        new
                        {
                            Id = 38,
                            EndDate = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 15,
                            StartDate = new DateTime(2021, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Bridge pattern"
                        },
                        new
                        {
                            Id = 39,
                            EndDate = new DateTime(2020, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 16,
                            StartDate = new DateTime(2020, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Variables"
                        },
                        new
                        {
                            Id = 40,
                            EndDate = new DateTime(2020, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 16,
                            StartDate = new DateTime(2020, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Conditional expressions"
                        },
                        new
                        {
                            Id = 41,
                            EndDate = new DateTime(2020, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 16,
                            StartDate = new DateTime(2020, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Cycles"
                        },
                        new
                        {
                            Id = 42,
                            EndDate = new DateTime(2020, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 17,
                            StartDate = new DateTime(2020, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Functions and their parameters"
                        },
                        new
                        {
                            Id = 43,
                            EndDate = new DateTime(2020, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 17,
                            StartDate = new DateTime(2020, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Returning the result"
                        },
                        new
                        {
                            Id = 44,
                            EndDate = new DateTime(2020, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 17,
                            StartDate = new DateTime(2020, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Lambda expressions"
                        },
                        new
                        {
                            Id = 45,
                            EndDate = new DateTime(2020, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 18,
                            StartDate = new DateTime(2020, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Classes and objects"
                        },
                        new
                        {
                            Id = 46,
                            EndDate = new DateTime(2020, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 18,
                            StartDate = new DateTime(2020, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Visibility modifiers"
                        },
                        new
                        {
                            Id = 47,
                            EndDate = new DateTime(2020, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 18,
                            StartDate = new DateTime(2020, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Inheritance"
                        },
                        new
                        {
                            Id = 48,
                            EndDate = new DateTime(2020, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 19,
                            StartDate = new DateTime(2020, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Data types"
                        },
                        new
                        {
                            Id = 49,
                            EndDate = new DateTime(2020, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 19,
                            StartDate = new DateTime(2020, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Column and table attributes and constraints"
                        },
                        new
                        {
                            Id = 50,
                            EndDate = new DateTime(2020, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 19,
                            StartDate = new DateTime(2020, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Foreign Keys"
                        },
                        new
                        {
                            Id = 51,
                            EndDate = new DateTime(2020, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 20,
                            StartDate = new DateTime(2020, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Adding data. INSERT command"
                        },
                        new
                        {
                            Id = 52,
                            EndDate = new DateTime(2020, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 20,
                            StartDate = new DateTime(2020, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Data sampling. SELECT command"
                        },
                        new
                        {
                            Id = 53,
                            EndDate = new DateTime(2020, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 20,
                            StartDate = new DateTime(2020, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Filtration. WHERE"
                        },
                        new
                        {
                            Id = 54,
                            EndDate = new DateTime(2020, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 21,
                            StartDate = new DateTime(2020, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "INNER JOIN"
                        },
                        new
                        {
                            Id = 55,
                            EndDate = new DateTime(2020, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 21,
                            StartDate = new DateTime(2020, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "OUTER JOIN"
                        },
                        new
                        {
                            Id = 56,
                            EndDate = new DateTime(2020, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 21,
                            StartDate = new DateTime(2020, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "UNION"
                        },
                        new
                        {
                            Id = 57,
                            EndDate = new DateTime(2020, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 22,
                            StartDate = new DateTime(2020, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Variables and data types"
                        },
                        new
                        {
                            Id = 58,
                            EndDate = new DateTime(2020, 8, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 22,
                            StartDate = new DateTime(2020, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Conditional expressions"
                        },
                        new
                        {
                            Id = 59,
                            EndDate = new DateTime(2020, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 22,
                            StartDate = new DateTime(2020, 8, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "String operations"
                        },
                        new
                        {
                            Id = 60,
                            EndDate = new DateTime(2020, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 23,
                            StartDate = new DateTime(2020, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Random module"
                        },
                        new
                        {
                            Id = 61,
                            EndDate = new DateTime(2020, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 23,
                            StartDate = new DateTime(2020, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Math module"
                        },
                        new
                        {
                            Id = 62,
                            EndDate = new DateTime(2020, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 23,
                            StartDate = new DateTime(2020, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Locale module"
                        },
                        new
                        {
                            Id = 63,
                            EndDate = new DateTime(2020, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 24,
                            StartDate = new DateTime(2020, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Encapsulation"
                        },
                        new
                        {
                            Id = 64,
                            EndDate = new DateTime(2020, 10, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 24,
                            StartDate = new DateTime(2020, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Inheritance"
                        },
                        new
                        {
                            Id = 65,
                            EndDate = new DateTime(2020, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 24,
                            StartDate = new DateTime(2020, 10, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Polymorphism"
                        },
                        new
                        {
                            Id = 66,
                            EndDate = new DateTime(2019, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 25,
                            StartDate = new DateTime(2019, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "The input and textarea elements"
                        },
                        new
                        {
                            Id = 67,
                            EndDate = new DateTime(2019, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 25,
                            StartDate = new DateTime(2019, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Select list"
                        },
                        new
                        {
                            Id = 68,
                            EndDate = new DateTime(2019, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 25,
                            StartDate = new DateTime(2019, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Modifiers"
                        },
                        new
                        {
                            Id = 69,
                            EndDate = new DateTime(2019, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 26,
                            StartDate = new DateTime(2019, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Component state and behavior"
                        },
                        new
                        {
                            Id = 70,
                            EndDate = new DateTime(2019, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 26,
                            StartDate = new DateTime(2019, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Props"
                        },
                        new
                        {
                            Id = 71,
                            EndDate = new DateTime(2019, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 26,
                            StartDate = new DateTime(2019, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Parent and child components"
                        },
                        new
                        {
                            Id = 72,
                            EndDate = new DateTime(2019, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 27,
                            StartDate = new DateTime(2019, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Defining routes"
                        },
                        new
                        {
                            Id = 73,
                            EndDate = new DateTime(2019, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 27,
                            StartDate = new DateTime(2019, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Route parameters"
                        },
                        new
                        {
                            Id = 74,
                            EndDate = new DateTime(2019, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 27,
                            StartDate = new DateTime(2019, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Nested routes"
                        },
                        new
                        {
                            Id = 75,
                            EndDate = new DateTime(2019, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 28,
                            StartDate = new DateTime(2019, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Components"
                        },
                        new
                        {
                            Id = 76,
                            EndDate = new DateTime(2019, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 28,
                            StartDate = new DateTime(2019, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Binding"
                        },
                        new
                        {
                            Id = 77,
                            EndDate = new DateTime(2019, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 28,
                            StartDate = new DateTime(2019, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Component life cycle"
                        },
                        new
                        {
                            Id = 78,
                            EndDate = new DateTime(2019, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 29,
                            StartDate = new DateTime(2019, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "ngClass and ngStyle"
                        },
                        new
                        {
                            Id = 79,
                            EndDate = new DateTime(2019, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 29,
                            StartDate = new DateTime(2019, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Getting parameters in directives"
                        },
                        new
                        {
                            Id = 80,
                            EndDate = new DateTime(2019, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 29,
                            StartDate = new DateTime(2019, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "ngIf, ngFor, ngSwitch"
                        },
                        new
                        {
                            Id = 81,
                            EndDate = new DateTime(2019, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 30,
                            StartDate = new DateTime(2019, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "HttpClient and Sending Requests"
                        },
                        new
                        {
                            Id = 82,
                            EndDate = new DateTime(2019, 8, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 30,
                            StartDate = new DateTime(2019, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Observable and RxJS library"
                        },
                        new
                        {
                            Id = 83,
                            EndDate = new DateTime(2019, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 30,
                            StartDate = new DateTime(2019, 8, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Sending data in a request"
                        },
                        new
                        {
                            Id = 84,
                            EndDate = new DateTime(2019, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 31,
                            StartDate = new DateTime(2019, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Components"
                        },
                        new
                        {
                            Id = 85,
                            EndDate = new DateTime(2019, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 31,
                            StartDate = new DateTime(2019, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Props"
                        },
                        new
                        {
                            Id = 86,
                            EndDate = new DateTime(2019, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 31,
                            StartDate = new DateTime(2019, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "State"
                        },
                        new
                        {
                            Id = 87,
                            EndDate = new DateTime(2019, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 32,
                            StartDate = new DateTime(2019, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Working with forms"
                        },
                        new
                        {
                            Id = 88,
                            EndDate = new DateTime(2019, 10, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 32,
                            StartDate = new DateTime(2019, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Form validation"
                        },
                        new
                        {
                            Id = 89,
                            EndDate = new DateTime(2019, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 32,
                            StartDate = new DateTime(2019, 10, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "Refs"
                        },
                        new
                        {
                            Id = 90,
                            EndDate = new DateTime(2019, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 33,
                            StartDate = new DateTime(2019, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "useState"
                        },
                        new
                        {
                            Id = 91,
                            EndDate = new DateTime(2019, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 33,
                            StartDate = new DateTime(2019, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "useEffect"
                        },
                        new
                        {
                            Id = 92,
                            EndDate = new DateTime(2019, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserSkill = 33,
                            StartDate = new DateTime(2019, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UnitLevel = 4,
                            Unitname = "useRef"
                        });
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.Statistics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Statistics")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AverageSkillLevel")
                        .HasColumnType("float");

                    b.Property<double>("BetterThanPercent")
                        .HasColumnType("float");

                    b.Property<int?>("IdEmployee")
                        .HasColumnType("int");

                    b.Property<int>("NewSkillCount")
                        .HasColumnType("int");

                    b.Property<int>("StatYear")
                        .HasColumnType("int");

                    b.Property<long>("StudyingTime")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("XPKStatistics");

                    b.HasIndex("IdEmployee");

                    b.ToTable("Statisticses");
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.Training", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Training")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdCategory")
                        .HasColumnType("int");

                    b.Property<int?>("IdCoach")
                        .HasColumnType("int");

                    b.Property<double>("Payment")
                        .HasColumnType("float");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TrainingLevel")
                        .HasColumnType("int");

                    b.Property<string>("TrainingTitle")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id")
                        .HasName("XPKTraining");

                    b.HasIndex("IdCategory");

                    b.HasIndex("IdCoach");

                    b.ToTable("Trainings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Learn multithreading in c#",
                            EndDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 1,
                            IdCoach = 3,
                            Payment = 0.0,
                            StartDate = new DateTime(2021, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrainingLevel = 4,
                            TrainingTitle = "Multithreading"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Learn Parallel in c#",
                            EndDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 1,
                            IdCoach = 3,
                            Payment = 0.0,
                            StartDate = new DateTime(2021, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrainingLevel = 4,
                            TrainingTitle = "Parallel programming"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Learn LINQ in c#",
                            EndDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 1,
                            IdCoach = 3,
                            Payment = 0.0,
                            StartDate = new DateTime(2021, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrainingLevel = 4,
                            TrainingTitle = "LINQ"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Learn reflection in c#",
                            EndDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 1,
                            IdCoach = 3,
                            Payment = 0.0,
                            StartDate = new DateTime(2021, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrainingLevel = 4,
                            TrainingTitle = "Reflection"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Learn file system in c#",
                            EndDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 1,
                            IdCoach = 3,
                            Payment = 0.0,
                            StartDate = new DateTime(2021, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrainingLevel = 4,
                            TrainingTitle = "Work with file system"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Learn alpha testing",
                            EndDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 2,
                            IdCoach = 4,
                            Payment = 0.0,
                            StartDate = new DateTime(2021, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrainingLevel = 4,
                            TrainingTitle = "Alpha testing"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Learn smoke testing",
                            EndDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 2,
                            IdCoach = 4,
                            Payment = 0.0,
                            StartDate = new DateTime(2021, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrainingLevel = 4,
                            TrainingTitle = "Smoke testing"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Learn new feature testing",
                            EndDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 2,
                            IdCoach = 4,
                            Payment = 0.0,
                            StartDate = new DateTime(2021, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrainingLevel = 4,
                            TrainingTitle = "New feature testing"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Learn regression testing",
                            EndDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 2,
                            IdCoach = 4,
                            Payment = 0.0,
                            StartDate = new DateTime(2021, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrainingLevel = 4,
                            TrainingTitle = "Regression testing"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Learn acceptance testing",
                            EndDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 2,
                            IdCoach = 4,
                            Payment = 0.0,
                            StartDate = new DateTime(2021, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrainingLevel = 4,
                            TrainingTitle = "Acceptance testing"
                        });
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.TrainingMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_TrainingMember")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdMember")
                        .HasColumnType("int");

                    b.Property<int?>("IdTraining")
                        .HasColumnType("int");

                    b.Property<bool>("IsEnded")
                        .HasColumnType("bit");

                    b.HasKey("Id")
                        .HasName("XPKTrainingMember");

                    b.HasIndex("IdMember");

                    b.HasIndex("IdTraining");

                    b.ToTable("TrainingMembers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdMember = 1,
                            IdTraining = 1,
                            IsEnded = false
                        },
                        new
                        {
                            Id = 2,
                            IdMember = 2,
                            IdTraining = 1,
                            IsEnded = false
                        },
                        new
                        {
                            Id = 3,
                            IdMember = 3,
                            IdTraining = 2,
                            IsEnded = false
                        },
                        new
                        {
                            Id = 4,
                            IdMember = 4,
                            IdTraining = 2,
                            IsEnded = false
                        },
                        new
                        {
                            Id = 5,
                            IdMember = 5,
                            IdTraining = 6,
                            IsEnded = false
                        },
                        new
                        {
                            Id = 6,
                            IdMember = 1,
                            IdTraining = 6,
                            IsEnded = false
                        },
                        new
                        {
                            Id = 7,
                            IdMember = 2,
                            IdTraining = 7,
                            IsEnded = false
                        },
                        new
                        {
                            Id = 8,
                            IdMember = 3,
                            IdTraining = 7,
                            IsEnded = false
                        },
                        new
                        {
                            Id = 9,
                            IdMember = 4,
                            IdTraining = 3,
                            IsEnded = false
                        },
                        new
                        {
                            Id = 10,
                            IdMember = 5,
                            IdTraining = 3,
                            IsEnded = false
                        },
                        new
                        {
                            Id = 11,
                            IdMember = 1,
                            IdTraining = 8,
                            IsEnded = false
                        },
                        new
                        {
                            Id = 12,
                            IdMember = 2,
                            IdTraining = 8,
                            IsEnded = false
                        });
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.UserSkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_UserSkill")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdCategory")
                        .HasColumnType("int");

                    b.Property<int?>("IdEmployee")
                        .HasColumnType("int");

                    b.Property<int>("SkillLevel")
                        .HasColumnType("int");

                    b.Property<string>("Skillname")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("XPKUserSkill");

                    b.HasIndex("IdCategory");

                    b.HasIndex("IdEmployee");

                    b.ToTable("UserSkills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDate = new DateTime(2021, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 1,
                            IdEmployee = 1,
                            SkillLevel = 3,
                            Skillname = "С# Basics",
                            StartDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            EndDate = new DateTime(2021, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 1,
                            IdEmployee = 1,
                            SkillLevel = 4,
                            Skillname = "C# Classes OOP",
                            StartDate = new DateTime(2021, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            EndDate = new DateTime(2021, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 1,
                            IdEmployee = 1,
                            SkillLevel = 5,
                            Skillname = "C# Exception",
                            StartDate = new DateTime(2021, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            EndDate = new DateTime(2021, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 1,
                            IdEmployee = 1,
                            SkillLevel = 4,
                            Skillname = "C# Delegate",
                            StartDate = new DateTime(2021, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            EndDate = new DateTime(2021, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 1,
                            IdEmployee = 1,
                            SkillLevel = 3,
                            Skillname = "C# Interface",
                            StartDate = new DateTime(2021, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            EndDate = new DateTime(2021, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 1,
                            IdEmployee = 1,
                            SkillLevel = 2,
                            Skillname = "C# Collections",
                            StartDate = new DateTime(2021, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            EndDate = new DateTime(2021, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 1,
                            IdEmployee = 1,
                            SkillLevel = 2,
                            Skillname = "C# String",
                            StartDate = new DateTime(2021, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            EndDate = new DateTime(2021, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 2,
                            IdEmployee = 1,
                            SkillLevel = 3,
                            Skillname = "By object of testing",
                            StartDate = new DateTime(2021, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            EndDate = new DateTime(2021, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 2,
                            IdEmployee = 1,
                            SkillLevel = 4,
                            Skillname = "By testing purposes",
                            StartDate = new DateTime(2021, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            EndDate = new DateTime(2021, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 2,
                            IdEmployee = 1,
                            SkillLevel = 5,
                            Skillname = "According to the knowledge of the system",
                            StartDate = new DateTime(2021, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            EndDate = new DateTime(2021, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 2,
                            IdEmployee = 1,
                            SkillLevel = 3,
                            Skillname = "By the degree of automation",
                            StartDate = new DateTime(2021, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            EndDate = new DateTime(2021, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 2,
                            IdEmployee = 1,
                            SkillLevel = 4,
                            Skillname = "By the degree of isolation of the components",
                            StartDate = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            EndDate = new DateTime(2021, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 3,
                            IdEmployee = 1,
                            SkillLevel = 2,
                            Skillname = "IDEF designing",
                            StartDate = new DateTime(2021, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            EndDate = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 3,
                            IdEmployee = 1,
                            SkillLevel = 4,
                            Skillname = "UML designing",
                            StartDate = new DateTime(2021, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            EndDate = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 3,
                            IdEmployee = 1,
                            SkillLevel = 4,
                            Skillname = "Design patterns",
                            StartDate = new DateTime(2021, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16,
                            EndDate = new DateTime(2020, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 6,
                            IdEmployee = 1,
                            SkillLevel = 4,
                            Skillname = "Kotlin language basics",
                            StartDate = new DateTime(2020, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 17,
                            EndDate = new DateTime(2020, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 6,
                            IdEmployee = 1,
                            SkillLevel = 4,
                            Skillname = "Kotlin functional programming",
                            StartDate = new DateTime(2020, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 18,
                            EndDate = new DateTime(2020, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 6,
                            IdEmployee = 1,
                            SkillLevel = 4,
                            Skillname = "Kotlin OOP",
                            StartDate = new DateTime(2020, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 19,
                            EndDate = new DateTime(2020, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 5,
                            IdEmployee = 1,
                            SkillLevel = 4,
                            Skillname = "T-SQL basics",
                            StartDate = new DateTime(2020, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 20,
                            EndDate = new DateTime(2020, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 5,
                            IdEmployee = 1,
                            SkillLevel = 4,
                            Skillname = "T-SQL basics. DML",
                            StartDate = new DateTime(2020, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 21,
                            EndDate = new DateTime(2020, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 5,
                            IdEmployee = 1,
                            SkillLevel = 4,
                            Skillname = "Joining tables",
                            StartDate = new DateTime(2020, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 22,
                            EndDate = new DateTime(2020, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 1,
                            IdEmployee = 1,
                            SkillLevel = 4,
                            Skillname = "Python basics",
                            StartDate = new DateTime(2020, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 23,
                            EndDate = new DateTime(2020, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 1,
                            IdEmployee = 1,
                            SkillLevel = 4,
                            Skillname = "Python built-in modules",
                            StartDate = new DateTime(2020, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 24,
                            EndDate = new DateTime(2020, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 1,
                            IdEmployee = 1,
                            SkillLevel = 4,
                            Skillname = "Python OOP",
                            StartDate = new DateTime(2020, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 25,
                            EndDate = new DateTime(2019, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 4,
                            IdEmployee = 1,
                            SkillLevel = 4,
                            Skillname = "Vue Forms",
                            StartDate = new DateTime(2019, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 26,
                            EndDate = new DateTime(2019, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 4,
                            IdEmployee = 1,
                            SkillLevel = 4,
                            Skillname = "Vue Components",
                            StartDate = new DateTime(2019, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 27,
                            EndDate = new DateTime(2019, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 4,
                            IdEmployee = 1,
                            SkillLevel = 4,
                            Skillname = "Vue Routing",
                            StartDate = new DateTime(2019, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 28,
                            EndDate = new DateTime(2019, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 4,
                            IdEmployee = 1,
                            SkillLevel = 4,
                            Skillname = "Angular basics",
                            StartDate = new DateTime(2019, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 29,
                            EndDate = new DateTime(2019, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 4,
                            IdEmployee = 1,
                            SkillLevel = 4,
                            Skillname = "Angular Directives",
                            StartDate = new DateTime(2019, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 30,
                            EndDate = new DateTime(2019, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 4,
                            IdEmployee = 1,
                            SkillLevel = 4,
                            Skillname = "Angular HTTP",
                            StartDate = new DateTime(2019, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 31,
                            EndDate = new DateTime(2019, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 4,
                            IdEmployee = 1,
                            SkillLevel = 4,
                            Skillname = "React basics",
                            StartDate = new DateTime(2019, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 32,
                            EndDate = new DateTime(2019, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 4,
                            IdEmployee = 1,
                            SkillLevel = 4,
                            Skillname = "React Forms",
                            StartDate = new DateTime(2019, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 33,
                            EndDate = new DateTime(2019, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategory = 4,
                            IdEmployee = 1,
                            SkillLevel = 4,
                            Skillname = "React Hooks",
                            StartDate = new DateTime(2019, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.Certificate", b =>
                {
                    b.HasOne("SkillRoadmapBack.Core.Models.Employer", "IdPublisherNavigation")
                        .WithMany("Certificates")
                        .HasForeignKey("IdPublisher")
                        .HasConstraintName("R_17");

                    b.HasOne("SkillRoadmapBack.Core.Models.Employee", "IdRecipientNavigation")
                        .WithMany("Certificates")
                        .HasForeignKey("IdRecipient")
                        .HasConstraintName("R_18");

                    b.HasOne("SkillRoadmapBack.Core.Models.UserSkill", "IdUserSkillNavigation")
                        .WithMany("Certificates")
                        .HasForeignKey("IdUserSkill")
                        .HasConstraintName("R_19");

                    b.Navigation("IdPublisherNavigation");

                    b.Navigation("IdRecipientNavigation");

                    b.Navigation("IdUserSkillNavigation");
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.Comment", b =>
                {
                    b.HasOne("SkillRoadmapBack.Core.Models.Employer", "IdEmployerNavigation")
                        .WithMany("Comments")
                        .HasForeignKey("IdEmployer")
                        .HasConstraintName("R_2");

                    b.HasOne("SkillRoadmapBack.Core.Models.UserSkill", "IdUserSkillNavigation")
                        .WithMany("Comments")
                        .HasForeignKey("IdUserSkill")
                        .HasConstraintName("R_3");

                    b.Navigation("IdEmployerNavigation");

                    b.Navigation("IdUserSkillNavigation");
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.Employee", b =>
                {
                    b.HasOne("SkillRoadmapBack.Core.Models.Company", "IdCompanyNavigation")
                        .WithMany("Employees")
                        .HasForeignKey("IdCompany")
                        .HasConstraintName("R_15");

                    b.HasOne("SkillRoadmapBack.Core.Models.Employer", "IdEmployerNavigation")
                        .WithMany("Employees")
                        .HasForeignKey("IdMentor")
                        .HasConstraintName("R_9");

                    b.Navigation("IdCompanyNavigation");

                    b.Navigation("IdEmployerNavigation");
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.Employer", b =>
                {
                    b.HasOne("SkillRoadmapBack.Core.Models.Company", "IdCompanyNavigation")
                        .WithMany("Employers")
                        .HasForeignKey("IdCompany")
                        .HasConstraintName("R_16");

                    b.Navigation("IdCompanyNavigation");
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.Notification", b =>
                {
                    b.HasOne("SkillRoadmapBack.Core.Models.Employee", "IdEmployeeNavigation")
                        .WithMany("Notifications")
                        .HasForeignKey("IdEmployee")
                        .HasConstraintName("R_6");

                    b.HasOne("SkillRoadmapBack.Core.Models.Employer", "IdEmployerNavigation")
                        .WithMany("Notifications")
                        .HasForeignKey("IdEmployer")
                        .HasConstraintName("R_4");

                    b.HasOne("SkillRoadmapBack.Core.Models.UserSkill", "IdUserSkillNavigation")
                        .WithMany("Notifications")
                        .HasForeignKey("IdUserSkill")
                        .HasConstraintName("R_5");

                    b.Navigation("IdEmployeeNavigation");

                    b.Navigation("IdEmployerNavigation");

                    b.Navigation("IdUserSkillNavigation");
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.Recommendation", b =>
                {
                    b.HasOne("SkillRoadmapBack.Core.Models.Employee", "IdEmployeeNavigation")
                        .WithMany("Recommendations")
                        .HasForeignKey("IdEmployee")
                        .HasConstraintName("R_22");

                    b.HasOne("SkillRoadmapBack.Core.Models.Training", "IdTrainingNavigation")
                        .WithMany("Recommendations")
                        .HasForeignKey("IdTraining")
                        .HasConstraintName("R_29");

                    b.Navigation("IdEmployeeNavigation");

                    b.Navigation("IdTrainingNavigation");
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.SkillMetric", b =>
                {
                    b.HasOne("SkillRoadmapBack.Core.Models.UserSkill", "IdUserSkillNavigation")
                        .WithMany("SkillMetrics")
                        .HasForeignKey("IdUserSkill")
                        .HasConstraintName("R_23");

                    b.Navigation("IdUserSkillNavigation");
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.SkillUnit", b =>
                {
                    b.HasOne("SkillRoadmapBack.Core.Models.UserSkill", "IdUserSkillNavigation")
                        .WithMany("SkillUnits")
                        .HasForeignKey("IdUserSkill")
                        .HasConstraintName("R_11");

                    b.Navigation("IdUserSkillNavigation");
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.Statistics", b =>
                {
                    b.HasOne("SkillRoadmapBack.Core.Models.Employee", "IdEmployeeNavigation")
                        .WithMany("Statisticses")
                        .HasForeignKey("IdEmployee")
                        .HasConstraintName("R_24");

                    b.Navigation("IdEmployeeNavigation");
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.Training", b =>
                {
                    b.HasOne("SkillRoadmapBack.Core.Models.Category", "IdCategoryNavigation")
                        .WithMany("Trainings")
                        .HasForeignKey("IdCategory")
                        .HasConstraintName("R_25");

                    b.HasOne("SkillRoadmapBack.Core.Models.Employer", "IdCoachNavigation")
                        .WithMany("Trainings")
                        .HasForeignKey("IdCoach")
                        .HasConstraintName("R_26");

                    b.Navigation("IdCategoryNavigation");

                    b.Navigation("IdCoachNavigation");
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.TrainingMember", b =>
                {
                    b.HasOne("SkillRoadmapBack.Core.Models.Employee", "IdMemberNavigation")
                        .WithMany("TrainingMembers")
                        .HasForeignKey("IdMember")
                        .HasConstraintName("R_27");

                    b.HasOne("SkillRoadmapBack.Core.Models.Training", "IdTrainingNavigation")
                        .WithMany("TrainingMembers")
                        .HasForeignKey("IdTraining")
                        .HasConstraintName("R_28");

                    b.Navigation("IdMemberNavigation");

                    b.Navigation("IdTrainingNavigation");
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.UserSkill", b =>
                {
                    b.HasOne("SkillRoadmapBack.Core.Models.Category", "IdCategoryNavigation")
                        .WithMany("UserSkills")
                        .HasForeignKey("IdCategory")
                        .HasConstraintName("R_10");

                    b.HasOne("SkillRoadmapBack.Core.Models.Employee", "IdEmployeeNavigation")
                        .WithMany("UserSkills")
                        .HasForeignKey("IdEmployee")
                        .HasConstraintName("R_1");

                    b.Navigation("IdCategoryNavigation");

                    b.Navigation("IdEmployeeNavigation");
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.Category", b =>
                {
                    b.Navigation("Trainings");

                    b.Navigation("UserSkills");
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.Company", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Employers");
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.Employee", b =>
                {
                    b.Navigation("Certificates");

                    b.Navigation("Notifications");

                    b.Navigation("Recommendations");

                    b.Navigation("Statisticses");

                    b.Navigation("TrainingMembers");

                    b.Navigation("UserSkills");
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.Employer", b =>
                {
                    b.Navigation("Certificates");

                    b.Navigation("Comments");

                    b.Navigation("Employees");

                    b.Navigation("Notifications");

                    b.Navigation("Trainings");
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.Training", b =>
                {
                    b.Navigation("Recommendations");

                    b.Navigation("TrainingMembers");
                });

            modelBuilder.Entity("SkillRoadmapBack.Core.Models.UserSkill", b =>
                {
                    b.Navigation("Certificates");

                    b.Navigation("Comments");

                    b.Navigation("Notifications");

                    b.Navigation("SkillMetrics");

                    b.Navigation("SkillUnits");
                });
#pragma warning restore 612, 618
        }
    }
}
